@model CardTariffsDto

<div class="main-content-block">
    <div class="add-entity-block">
        <form asp-controller="Card" asp-action="UpdateCard" asp-route-bankId="@Model.BankId" method="post" class="add-form">
            <h2>Update Card for @ViewBag.BankName</h2>
            <input asp-for="BankId" value="@Model.BankId" type="hidden">
            <label>
                Card Name:
                <input asp-for="CardName">
            </label>
            <div class="radio-elements">
                <label>Card Type:</label>
                @if (Model.Type == CardType.Credit)
                {
                    <label>
                        <input type="radio" name="Type" value="@CardType.Credit" checked /> Credit
                    </label>
                    <label>
                        <input type="radio" name="Type" value="@CardType.Debit" /> Debit
                    </label>
                }
                else
                {
                    <label>
                        <input type="radio" name="Type" value="@CardType.Credit" /> Credit
                    </label>
                    <label>
                        <input type="radio" name="Type" value="@CardType.Debit" checked /> Debit
                    </label>
                }
            </div>
            <div class="radio-elements">
                <label>CardLevel</label>
                @if (Model.Level== CardLevel.Normal)
                {
                    <label>
                        <input asp-for="Level" type="radio" value="@CardLevel.Normal" checked /> Classic
                    </label>
                    <label>
                        <input asp-for="Level" type="radio" value="@CardLevel.Premium" /> Premium
                    </label>
                }
                else
                {
                    <label>
                        <input asp-for="Level" type="radio" value="@CardLevel.Normal"/> Classic
                    </label>
                    <label>
                        <input asp-for="Level" type="radio" value="@CardLevel.Premium" checked /> Premium
                    </label>
                }

            </div>
            <label>
                Validity Period (in years):
                <input asp-for="ValidityPeriod" step="0.5" maxlength="4" required oninput="this.value = this.value.replace('.', ',')">
            </label>
            <label id="credit-limit">
                Max Credit Limit:
                <input asp-for="MaxCreditLimit">
            </label>
            <label id="interest-rate">
                Interest Rate:
                <input asp-for="InterestRate" step="0.1" maxlength="4" oninput="this.value = this.value.replace('.', ',')">
            </label>

            <div class="radio-elements">
                <label>Enabled Payment Systems:</label>
                @if (Model.EnabledPaymentSystems.Contains(PaymentSystem.Visa))
                {
                    <label>
                        <input name="EnabledPaymentSystems" type="checkbox" value="@PaymentSystem.Visa" checked/> Visa
                    </label>
                }
                else
                {
                    <label>
                        <input name="EnabledPaymentSystems" type="checkbox" value="@PaymentSystem.Visa" /> Visa
                    </label>
                }

                @if (Model.EnabledPaymentSystems.Contains(PaymentSystem.Mastercard))
                {
                    <label>
                        <input name="EnabledPaymentSystems" type="checkbox" value="@PaymentSystem.Mastercard" checked/> Mastercard
                    </label>
                }
                else
                {
                    <label>
                        <input name="EnabledPaymentSystems" type="checkbox" value="@PaymentSystem.Mastercard" /> Mastercard
                    </label>
                }
            </div>

            <div class="radio-elements">
                <label>Enable Curency:</label>
                @if (Model.EnableCurency.Contains(CardCurrency.UAH))
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.UAH" checked />UAH
                    </label>
                }
                else
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.UAH"/>UAH
                    </label>
                }

                @if (Model.EnableCurency.Contains(CardCurrency.USD))
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.USD" checked/> USD
                    </label>
                }
                else
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.USD" /> USD
                    </label>
                }

                @if (Model.EnableCurency.Contains(CardCurrency.EUR))
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.EUR" checked/> EUR
                    </label>
                }
                else
                {
                    <label>
                        <input name="EnableCurency" type="checkbox" value="@CardCurrency.EUR" /> EUR
                    </label>
                }

            </div>

            <label>
                Annual Maintenance Cost:
                <input asp-for="AnnualMaintenanceCost" type="number">
            </label>
            <label>
                P2P To Another Bank Commission:
                <input asp-for="P2PToAnotherBankCommission">
            </label>
            <label>
                P2P Internal Commission:
                <input asp-for="P2PInternalCommission">
            </label>
            <label>
                First 6 digits of the card number (BIN):
                <input asp-for="BIN">
            </label>
            <label class="color-picker-wrapper">
                Card Color:
                <div class="color-preview">
                    <input type="color" id="card-color" asp-for="CardColor" value="@Model.CardColor">
                </div>
            </label>


            @if (ViewBag.Message != null)
            {
                @if (ViewBag.Message == "Success!")
                {
                    <span class="success-message">@Model.CardName has been successfully created</span>
                }
                @if (ViewBag.Message != "Success!")
                {
                    <div class="error-validation-message">
                        <span>@ViewBag.Message</span>
                        <ul>
                            @foreach (var error in ViewBag.Errors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>
                }
            }
            <button type="submit" class="create-element">Update Card</button>
        </form>
    </div>
</div>

@section backButton {
    <a asp-controller="CardTariffs" asp-action="CardTariffsList" class="text-reset text-decoration-none back-link d-flex align-items-center">
        <img src="~/images/main-page/arrow-to-left-icon.svg" alt="Back" />
    </a>
}

@section additionalScripts {
    <script type="module" src="~/js/entities/card-tariffs/AddCardInputsHandler.js" defer></script>
}

